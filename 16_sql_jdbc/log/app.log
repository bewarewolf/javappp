16:28:08.302 [main] INFO  [DropSchemaApp]: Starting DROP SCHEMA application
16:28:08.351 [main] INFO  [DropSchemaApp]: Schema has been dropped
16:29:34.532 [main] INFO  [CreateSchemaApp]: Starting CREATE SCHEMA application
16:29:34.567 [main] INFO  [CreateSchemaApp]: CREATE TABLE grade ( grade_id INT IDENTITY, description VARCHAR(100) NOT NULL, value INT UNIQUE NOT NULL);
16:29:34.567 [main] INFO  [CreateSchemaApp]: CREATE TABLE person ( person_id INT IDENTITY, first_name VARCHAR(100) NOT NULL, middle_name VARCHAR(100), last_name VARCHAR(100) NOT NULL, birthday DATE NOT NULL, date_start DATE NOT NULL, person_type_id INT NOT NULL, person_status_id INT NOT NULL);
16:29:34.567 [main] INFO  [CreateSchemaApp]: CREATE TABLE subject ( subject_id INT IDENTITY, subject_name VARCHAR(100) NOT NULL UNIQUE, teacher_id INT, semester_id INT NOT NULL);
16:29:34.567 [main] INFO  [CreateSchemaApp]: CREATE TABLE semester ( semester_id INT IDENTITY, semester_name VARCHAR(20) NOT NULL UNIQUE, semester_date_start DATE NOT NULL, semester_date_end DATE NOT NULL);
16:29:34.567 [main] INFO  [CreateSchemaApp]: CREATE TABLE journal ( record_id INT IDENTITY, person_id INT NOT NULL, subject_id INT NOT NULL, grade_id INT NOT NULL, grade_date TIMESTAMP NOT NULL DEFAULT CURRENT_DATE(), FOREIGN KEY (grade_id) REFERENCES grade (grade_id) ON DELETE CASCADE, FOREIGN KEY (person_id) REFERENCES person (person_id) ON DELETE CASCADE, FOREIGN KEY (subject_id) REFERENCES subject (subject_id) ON DELETE CASCADE);
16:29:34.568 [main] INFO  [CreateSchemaApp]: CREATE TABLE phone_number ( phone_number_id INT IDENTITY, phone_number VARCHAR(20) NOT NULL UNIQUE, person_id INT NOT NULL, FOREIGN KEY (person_id) REFERENCES person (person_id) ON DELETE CASCADE);
16:29:34.568 [main] INFO  [CreateSchemaApp]: CREATE TABLE person_type ( person_type_id INT IDENTITY, description VARCHAR(100), value VARCHAR(20) NOT NULL UNIQUE);
16:29:34.568 [main] INFO  [CreateSchemaApp]: CREATE TABLE person_status ( person_status_id INT IDENTITY, description VARCHAR(100), value VARCHAR(20) NOT NULL UNIQUE);
16:29:34.568 [main] INFO  [CreateSchemaApp]: ALTER TABLE person ADD FOREIGN KEY (person_type_id) REFERENCES person_type (person_type_id)
16:29:34.568 [main] INFO  [CreateSchemaApp]: ALTER TABLE person ADD FOREIGN KEY (person_status_id) REFERENCES person_status (person_status_id)
16:29:34.568 [main] INFO  [CreateSchemaApp]: ALTER TABLE subject ADD FOREIGN KEY (teacher_id) REFERENCES person (person_id) ON DELETE CASCADE;
16:29:34.568 [main] INFO  [CreateSchemaApp]: ALTER TABLE subject ADD FOREIGN KEY (semester_id) REFERENCES semester (semester_id) ON DELETE CASCADE;
16:29:34.587 [main] INFO  [CreateSchemaApp]: Schema has been created
16:32:26.770 [main] INFO  [DAOExampleApp]: --- Grade DAO demo
16:32:26.772 [main] INFO  [DAOExampleApp]: Creating grade: ID: null; Description: Fail; Value: 1
16:32:26.821 [main] ERROR [H2GradeDAOImpl]: Can't add grade [ID: null; Description: Fail; Value: 1]
org.h2.jdbc.JdbcSQLException: Column "grade_id" not found [42122-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.message.DbException.get(DbException.java:179) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.message.DbException.get(DbException.java:155) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3174) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.jdbc.JdbcResultSet.get(JdbcResultSet.java:3236) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.jdbc.JdbcResultSet.getInt(JdbcResultSet.java:346) ~[h2-1.4.193.jar:1.4.193]
	at com.nixsolutions.jdbc.dao.impl.h2.H2GradeDAOImpl.create(H2GradeDAOImpl.java:36) [classes/:?]
	at com.nixsolutions.jdbc.dao.impl.h2.H2GradeDAOImpl.create(H2GradeDAOImpl.java:1) [classes/:?]
	at com.nixsolutions.jdbc.main.DAOExampleApp.runGradeDAO(DAOExampleApp.java:41) [classes/:?]
	at com.nixsolutions.jdbc.main.DAOExampleApp.main(DAOExampleApp.java:20) [classes/:?]
16:32:26.825 [main] INFO  [DAOExampleApp]: Creating grade: ID: null; Description: Pass; Value: 2
16:32:26.827 [main] ERROR [H2GradeDAOImpl]: Can't add grade [ID: null; Description: Pass; Value: 2]
org.h2.jdbc.JdbcSQLException: Column "grade_id" not found [42122-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.message.DbException.get(DbException.java:179) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.message.DbException.get(DbException.java:155) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3174) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.jdbc.JdbcResultSet.get(JdbcResultSet.java:3236) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.jdbc.JdbcResultSet.getInt(JdbcResultSet.java:346) ~[h2-1.4.193.jar:1.4.193]
	at com.nixsolutions.jdbc.dao.impl.h2.H2GradeDAOImpl.create(H2GradeDAOImpl.java:36) [classes/:?]
	at com.nixsolutions.jdbc.dao.impl.h2.H2GradeDAOImpl.create(H2GradeDAOImpl.java:1) [classes/:?]
	at com.nixsolutions.jdbc.main.DAOExampleApp.runGradeDAO(DAOExampleApp.java:41) [classes/:?]
	at com.nixsolutions.jdbc.main.DAOExampleApp.main(DAOExampleApp.java:20) [classes/:?]
16:32:26.827 [main] INFO  [DAOExampleApp]: Creating grade: ID: null; Description: Average; Value: 3
16:32:26.828 [main] ERROR [H2GradeDAOImpl]: Can't add grade [ID: null; Description: Average; Value: 3]
org.h2.jdbc.JdbcSQLException: Column "grade_id" not found [42122-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.message.DbException.get(DbException.java:179) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.message.DbException.get(DbException.java:155) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3174) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.jdbc.JdbcResultSet.get(JdbcResultSet.java:3236) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.jdbc.JdbcResultSet.getInt(JdbcResultSet.java:346) ~[h2-1.4.193.jar:1.4.193]
	at com.nixsolutions.jdbc.dao.impl.h2.H2GradeDAOImpl.create(H2GradeDAOImpl.java:36) [classes/:?]
	at com.nixsolutions.jdbc.dao.impl.h2.H2GradeDAOImpl.create(H2GradeDAOImpl.java:1) [classes/:?]
	at com.nixsolutions.jdbc.main.DAOExampleApp.runGradeDAO(DAOExampleApp.java:41) [classes/:?]
	at com.nixsolutions.jdbc.main.DAOExampleApp.main(DAOExampleApp.java:20) [classes/:?]
16:32:26.829 [main] INFO  [DAOExampleApp]: Creating grade: ID: null; Description: Good; Value: 4
16:32:26.829 [main] ERROR [H2GradeDAOImpl]: Can't add grade [ID: null; Description: Good; Value: 4]
org.h2.jdbc.JdbcSQLException: Column "grade_id" not found [42122-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.message.DbException.get(DbException.java:179) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.message.DbException.get(DbException.java:155) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3174) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.jdbc.JdbcResultSet.get(JdbcResultSet.java:3236) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.jdbc.JdbcResultSet.getInt(JdbcResultSet.java:346) ~[h2-1.4.193.jar:1.4.193]
	at com.nixsolutions.jdbc.dao.impl.h2.H2GradeDAOImpl.create(H2GradeDAOImpl.java:36) [classes/:?]
	at com.nixsolutions.jdbc.dao.impl.h2.H2GradeDAOImpl.create(H2GradeDAOImpl.java:1) [classes/:?]
	at com.nixsolutions.jdbc.main.DAOExampleApp.runGradeDAO(DAOExampleApp.java:41) [classes/:?]
	at com.nixsolutions.jdbc.main.DAOExampleApp.main(DAOExampleApp.java:20) [classes/:?]
16:32:26.830 [main] INFO  [DAOExampleApp]: Creating grade: ID: null; Description: Very good; Value: 5
16:32:26.831 [main] ERROR [H2GradeDAOImpl]: Can't add grade [ID: null; Description: Very good; Value: 5]
org.h2.jdbc.JdbcSQLException: Column "grade_id" not found [42122-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.message.DbException.get(DbException.java:179) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.message.DbException.get(DbException.java:155) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3174) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.jdbc.JdbcResultSet.get(JdbcResultSet.java:3236) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.jdbc.JdbcResultSet.getInt(JdbcResultSet.java:346) ~[h2-1.4.193.jar:1.4.193]
	at com.nixsolutions.jdbc.dao.impl.h2.H2GradeDAOImpl.create(H2GradeDAOImpl.java:36) [classes/:?]
	at com.nixsolutions.jdbc.dao.impl.h2.H2GradeDAOImpl.create(H2GradeDAOImpl.java:1) [classes/:?]
	at com.nixsolutions.jdbc.main.DAOExampleApp.runGradeDAO(DAOExampleApp.java:41) [classes/:?]
	at com.nixsolutions.jdbc.main.DAOExampleApp.main(DAOExampleApp.java:20) [classes/:?]
16:32:26.832 [main] INFO  [DAOExampleApp]: Grade [ID = 3]: ID: 3; Description: Average; Value: 3
16:32:26.834 [main] INFO  [DAOExampleApp]: ID: 1; Description: Fail; Value: 1
16:32:26.834 [main] INFO  [DAOExampleApp]: ID: 3; Description: Average; Value: 3
16:32:26.834 [main] INFO  [DAOExampleApp]: ID: 4; Description: Good; Value: 4
16:32:26.834 [main] INFO  [DAOExampleApp]: ID: 5; Description: Very good; Value: 5
16:32:26.834 [main] INFO  [DAOExampleApp]: --- Grade DAO demo finished
16:32:26.834 [main] INFO  [DAOExampleApp]: --- Person Type DAO demo
16:32:26.835 [main] INFO  [DAOExampleApp]: Creating type: ID: null; Description: Administration; Value: Dean
16:32:26.836 [main] ERROR [H2PersonTypeDAOImpl]: Can't add person type [ID: null; Description: Administration; Value: Dean]
org.h2.jdbc.JdbcSQLException: Column "person_type_id" not found [42122-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.message.DbException.get(DbException.java:179) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.message.DbException.get(DbException.java:155) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3174) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.jdbc.JdbcResultSet.get(JdbcResultSet.java:3236) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.jdbc.JdbcResultSet.getInt(JdbcResultSet.java:346) ~[h2-1.4.193.jar:1.4.193]
	at com.nixsolutions.jdbc.dao.impl.h2.H2PersonTypeDAOImpl.create(H2PersonTypeDAOImpl.java:36) [classes/:?]
	at com.nixsolutions.jdbc.dao.impl.h2.H2PersonTypeDAOImpl.create(H2PersonTypeDAOImpl.java:1) [classes/:?]
	at com.nixsolutions.jdbc.main.DAOExampleApp.runPersonTypeDAO(DAOExampleApp.java:62) [classes/:?]
	at com.nixsolutions.jdbc.main.DAOExampleApp.main(DAOExampleApp.java:24) [classes/:?]
16:32:26.836 [main] INFO  [DAOExampleApp]: Creating type: ID: null; Description: Teaching and grading; Value: Teacher
16:32:26.837 [main] ERROR [H2PersonTypeDAOImpl]: Can't add person type [ID: null; Description: Teaching and grading; Value: Teacher]
org.h2.jdbc.JdbcSQLException: Column "person_type_id" not found [42122-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.message.DbException.get(DbException.java:179) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.message.DbException.get(DbException.java:155) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3174) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.jdbc.JdbcResultSet.get(JdbcResultSet.java:3236) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.jdbc.JdbcResultSet.getInt(JdbcResultSet.java:346) ~[h2-1.4.193.jar:1.4.193]
	at com.nixsolutions.jdbc.dao.impl.h2.H2PersonTypeDAOImpl.create(H2PersonTypeDAOImpl.java:36) [classes/:?]
	at com.nixsolutions.jdbc.dao.impl.h2.H2PersonTypeDAOImpl.create(H2PersonTypeDAOImpl.java:1) [classes/:?]
	at com.nixsolutions.jdbc.main.DAOExampleApp.runPersonTypeDAO(DAOExampleApp.java:62) [classes/:?]
	at com.nixsolutions.jdbc.main.DAOExampleApp.main(DAOExampleApp.java:24) [classes/:?]
16:32:26.838 [main] INFO  [DAOExampleApp]: Creating type: ID: null; Description: Studying; Value: Student
16:32:26.838 [main] ERROR [H2PersonTypeDAOImpl]: Can't add person type [ID: null; Description: Studying; Value: Student]
org.h2.jdbc.JdbcSQLException: Column "person_type_id" not found [42122-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.message.DbException.get(DbException.java:179) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.message.DbException.get(DbException.java:155) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3174) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.jdbc.JdbcResultSet.get(JdbcResultSet.java:3236) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.jdbc.JdbcResultSet.getInt(JdbcResultSet.java:346) ~[h2-1.4.193.jar:1.4.193]
	at com.nixsolutions.jdbc.dao.impl.h2.H2PersonTypeDAOImpl.create(H2PersonTypeDAOImpl.java:36) [classes/:?]
	at com.nixsolutions.jdbc.dao.impl.h2.H2PersonTypeDAOImpl.create(H2PersonTypeDAOImpl.java:1) [classes/:?]
	at com.nixsolutions.jdbc.main.DAOExampleApp.runPersonTypeDAO(DAOExampleApp.java:62) [classes/:?]
	at com.nixsolutions.jdbc.main.DAOExampleApp.main(DAOExampleApp.java:24) [classes/:?]
16:32:26.840 [main] INFO  [DAOExampleApp]: Type [ID = 2]: ID: 2; Description: Teaching and grading; Value: Teacher
16:32:26.841 [main] INFO  [DAOExampleApp]: ID: 2; Description: Teaching and grading; Value: Teacher
16:32:26.841 [main] INFO  [DAOExampleApp]: ID: 3; Description: Studying; Value: Student
16:32:26.841 [main] INFO  [DAOExampleApp]: --- Person Type DAO demo finished
16:33:35.017 [main] INFO  [DAOExampleApp]: --- Grade DAO demo
16:33:35.019 [main] INFO  [DAOExampleApp]: Creating grade: ID: null; Description: Fail; Value: 1
16:33:35.070 [main] ERROR [H2GradeDAOImpl]: Can't add grade [ID: null; Description: Fail; Value: 1]
org.h2.jdbc.JdbcSQLException: Unique index or primary key violation: "CONSTRAINT_INDEX_4 ON PUBLIC.GRADE(VALUE) VALUES (1, 1)"; SQL statement:
INSERT INTO grade (description, value) VALUES (?, ?) [23505-193]
	at org.h2.engine.SessionRemote.done(SessionRemote.java:624) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.command.CommandRemote.executeUpdate(CommandRemote.java:191) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:160) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:146) ~[h2-1.4.193.jar:1.4.193]
	at com.nixsolutions.jdbc.dao.impl.h2.H2GradeDAOImpl.create(H2GradeDAOImpl.java:31) [classes/:?]
	at com.nixsolutions.jdbc.dao.impl.h2.H2GradeDAOImpl.create(H2GradeDAOImpl.java:1) [classes/:?]
	at com.nixsolutions.jdbc.main.DAOExampleApp.runGradeDAO(DAOExampleApp.java:41) [classes/:?]
	at com.nixsolutions.jdbc.main.DAOExampleApp.main(DAOExampleApp.java:20) [classes/:?]
16:33:35.074 [main] INFO  [DAOExampleApp]: Creating grade: ID: null; Description: Pass; Value: 2
16:33:35.081 [main] ERROR [H2GradeDAOImpl]: Can't add grade [ID: null; Description: Pass; Value: 2]
org.h2.jdbc.JdbcSQLException: Column "grade_id" not found [42122-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.message.DbException.get(DbException.java:179) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.message.DbException.get(DbException.java:155) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3174) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.jdbc.JdbcResultSet.get(JdbcResultSet.java:3236) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.jdbc.JdbcResultSet.getInt(JdbcResultSet.java:346) ~[h2-1.4.193.jar:1.4.193]
	at com.nixsolutions.jdbc.dao.impl.h2.H2GradeDAOImpl.create(H2GradeDAOImpl.java:36) [classes/:?]
	at com.nixsolutions.jdbc.dao.impl.h2.H2GradeDAOImpl.create(H2GradeDAOImpl.java:1) [classes/:?]
	at com.nixsolutions.jdbc.main.DAOExampleApp.runGradeDAO(DAOExampleApp.java:41) [classes/:?]
	at com.nixsolutions.jdbc.main.DAOExampleApp.main(DAOExampleApp.java:20) [classes/:?]
16:33:35.081 [main] INFO  [DAOExampleApp]: Creating grade: ID: null; Description: Average; Value: 3
16:33:35.083 [main] ERROR [H2GradeDAOImpl]: Can't add grade [ID: null; Description: Average; Value: 3]
org.h2.jdbc.JdbcSQLException: Unique index or primary key violation: "CONSTRAINT_INDEX_4 ON PUBLIC.GRADE(VALUE) VALUES (3, 3)"; SQL statement:
INSERT INTO grade (description, value) VALUES (?, ?) [23505-193]
	at org.h2.engine.SessionRemote.done(SessionRemote.java:624) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.command.CommandRemote.executeUpdate(CommandRemote.java:191) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:160) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:146) ~[h2-1.4.193.jar:1.4.193]
	at com.nixsolutions.jdbc.dao.impl.h2.H2GradeDAOImpl.create(H2GradeDAOImpl.java:31) [classes/:?]
	at com.nixsolutions.jdbc.dao.impl.h2.H2GradeDAOImpl.create(H2GradeDAOImpl.java:1) [classes/:?]
	at com.nixsolutions.jdbc.main.DAOExampleApp.runGradeDAO(DAOExampleApp.java:41) [classes/:?]
	at com.nixsolutions.jdbc.main.DAOExampleApp.main(DAOExampleApp.java:20) [classes/:?]
16:33:35.084 [main] INFO  [DAOExampleApp]: Creating grade: ID: null; Description: Good; Value: 4
16:33:35.085 [main] ERROR [H2GradeDAOImpl]: Can't add grade [ID: null; Description: Good; Value: 4]
org.h2.jdbc.JdbcSQLException: Unique index or primary key violation: "CONSTRAINT_INDEX_4 ON PUBLIC.GRADE(VALUE) VALUES (4, 4)"; SQL statement:
INSERT INTO grade (description, value) VALUES (?, ?) [23505-193]
	at org.h2.engine.SessionRemote.done(SessionRemote.java:624) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.command.CommandRemote.executeUpdate(CommandRemote.java:191) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:160) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:146) ~[h2-1.4.193.jar:1.4.193]
	at com.nixsolutions.jdbc.dao.impl.h2.H2GradeDAOImpl.create(H2GradeDAOImpl.java:31) [classes/:?]
	at com.nixsolutions.jdbc.dao.impl.h2.H2GradeDAOImpl.create(H2GradeDAOImpl.java:1) [classes/:?]
	at com.nixsolutions.jdbc.main.DAOExampleApp.runGradeDAO(DAOExampleApp.java:41) [classes/:?]
	at com.nixsolutions.jdbc.main.DAOExampleApp.main(DAOExampleApp.java:20) [classes/:?]
16:33:35.085 [main] INFO  [DAOExampleApp]: Creating grade: ID: null; Description: Very good; Value: 5
16:33:35.087 [main] ERROR [H2GradeDAOImpl]: Can't add grade [ID: null; Description: Very good; Value: 5]
org.h2.jdbc.JdbcSQLException: Unique index or primary key violation: "CONSTRAINT_INDEX_4 ON PUBLIC.GRADE(VALUE) VALUES (5, 5)"; SQL statement:
INSERT INTO grade (description, value) VALUES (?, ?) [23505-193]
	at org.h2.engine.SessionRemote.done(SessionRemote.java:624) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.command.CommandRemote.executeUpdate(CommandRemote.java:191) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:160) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:146) ~[h2-1.4.193.jar:1.4.193]
	at com.nixsolutions.jdbc.dao.impl.h2.H2GradeDAOImpl.create(H2GradeDAOImpl.java:31) [classes/:?]
	at com.nixsolutions.jdbc.dao.impl.h2.H2GradeDAOImpl.create(H2GradeDAOImpl.java:1) [classes/:?]
	at com.nixsolutions.jdbc.main.DAOExampleApp.runGradeDAO(DAOExampleApp.java:41) [classes/:?]
	at com.nixsolutions.jdbc.main.DAOExampleApp.main(DAOExampleApp.java:20) [classes/:?]
16:33:35.089 [main] INFO  [DAOExampleApp]: Grade [ID = 3]: ID: 3; Description: Average; Value: 3
16:33:35.091 [main] INFO  [DAOExampleApp]: ID: 1; Description: Fail; Value: 1
16:33:35.091 [main] INFO  [DAOExampleApp]: ID: 3; Description: Average; Value: 3
16:33:35.091 [main] INFO  [DAOExampleApp]: ID: 4; Description: Good; Value: 4
16:33:35.091 [main] INFO  [DAOExampleApp]: ID: 5; Description: Very good; Value: 5
16:33:35.092 [main] INFO  [DAOExampleApp]: ID: 7; Description: Pass; Value: 2
16:33:35.092 [main] INFO  [DAOExampleApp]: --- Grade DAO demo finished
16:33:35.092 [main] INFO  [DAOExampleApp]: --- Person Type DAO demo
16:33:35.156 [main] INFO  [DAOExampleApp]: Creating type: ID: null; Description: Administration; Value: Dean
16:36:55.061 [main] INFO  [DropSchemaApp]: Starting DROP SCHEMA application
16:36:55.104 [main] INFO  [DropSchemaApp]: Schema has been dropped
16:37:10.564 [main] INFO  [CreateSchemaApp]: Starting CREATE SCHEMA application
16:37:10.598 [main] INFO  [CreateSchemaApp]: CREATE TABLE grade ( grade_id INT IDENTITY, description VARCHAR(100) NOT NULL, value INT UNIQUE NOT NULL);
16:37:10.598 [main] INFO  [CreateSchemaApp]: CREATE TABLE person ( person_id INT IDENTITY, first_name VARCHAR(100) NOT NULL, middle_name VARCHAR(100), last_name VARCHAR(100) NOT NULL, birthday DATE NOT NULL, date_start DATE NOT NULL, person_type_id INT NOT NULL, person_status_id INT NOT NULL);
16:37:10.598 [main] INFO  [CreateSchemaApp]: CREATE TABLE subject ( subject_id INT IDENTITY, subject_name VARCHAR(100) NOT NULL UNIQUE, teacher_id INT, semester_id INT NOT NULL);
16:37:10.598 [main] INFO  [CreateSchemaApp]: CREATE TABLE semester ( semester_id INT IDENTITY, semester_name VARCHAR(20) NOT NULL UNIQUE, semester_date_start DATE NOT NULL, semester_date_end DATE NOT NULL);
16:37:10.598 [main] INFO  [CreateSchemaApp]: CREATE TABLE journal ( record_id INT IDENTITY, person_id INT NOT NULL, subject_id INT NOT NULL, grade_id INT NOT NULL, grade_date TIMESTAMP NOT NULL DEFAULT CURRENT_DATE(), FOREIGN KEY (grade_id) REFERENCES grade (grade_id) ON DELETE CASCADE, FOREIGN KEY (person_id) REFERENCES person (person_id) ON DELETE CASCADE, FOREIGN KEY (subject_id) REFERENCES subject (subject_id) ON DELETE CASCADE);
16:37:10.598 [main] INFO  [CreateSchemaApp]: CREATE TABLE phone_number ( phone_number_id INT IDENTITY, phone_number VARCHAR(20) NOT NULL UNIQUE, person_id INT NOT NULL, FOREIGN KEY (person_id) REFERENCES person (person_id) ON DELETE CASCADE);
16:37:10.599 [main] INFO  [CreateSchemaApp]: CREATE TABLE person_type ( person_type_id INT IDENTITY, description VARCHAR(100), value VARCHAR(20) NOT NULL UNIQUE);
16:37:10.599 [main] INFO  [CreateSchemaApp]: CREATE TABLE person_status ( person_status_id INT IDENTITY, description VARCHAR(100), value VARCHAR(20) NOT NULL UNIQUE);
16:37:10.599 [main] INFO  [CreateSchemaApp]: ALTER TABLE person ADD FOREIGN KEY (person_type_id) REFERENCES person_type (person_type_id)
16:37:10.599 [main] INFO  [CreateSchemaApp]: ALTER TABLE person ADD FOREIGN KEY (person_status_id) REFERENCES person_status (person_status_id)
16:37:10.599 [main] INFO  [CreateSchemaApp]: ALTER TABLE subject ADD FOREIGN KEY (teacher_id) REFERENCES person (person_id) ON DELETE CASCADE;
16:37:10.599 [main] INFO  [CreateSchemaApp]: ALTER TABLE subject ADD FOREIGN KEY (semester_id) REFERENCES semester (semester_id) ON DELETE CASCADE;
16:37:10.612 [main] INFO  [CreateSchemaApp]: Schema has been created
16:37:58.779 [main] INFO  [DAOExampleApp]: --- Grade DAO demo
16:37:58.782 [main] INFO  [DAOExampleApp]: Creating grade: ID: null; Description: Fail; Value: 1
16:37:58.837 [main] INFO  [DAOExampleApp]: Creating grade: ID: null; Description: Pass; Value: 2
16:37:58.838 [main] INFO  [DAOExampleApp]: Creating grade: ID: null; Description: Average; Value: 3
16:37:58.839 [main] INFO  [DAOExampleApp]: Creating grade: ID: null; Description: Good; Value: 4
16:37:58.840 [main] INFO  [DAOExampleApp]: Creating grade: ID: null; Description: Very good; Value: 5
16:37:58.842 [main] INFO  [DAOExampleApp]: Grade [ID = 3]: ID: 3; Description: Average; Value: 3
16:37:58.844 [main] INFO  [DAOExampleApp]: ID: 1; Description: Fail; Value: 1
16:37:58.844 [main] INFO  [DAOExampleApp]: ID: 3; Description: Average; Value: 3
16:37:58.844 [main] INFO  [DAOExampleApp]: ID: 4; Description: Good; Value: 4
16:37:58.845 [main] INFO  [DAOExampleApp]: ID: 5; Description: Very good; Value: 5
16:37:58.845 [main] INFO  [DAOExampleApp]: --- Grade DAO demo finished
16:37:58.845 [main] INFO  [DAOExampleApp]: --- Person Type DAO demo
16:37:58.846 [main] INFO  [DAOExampleApp]: Creating type: ID: null; Description: Administration; Value: Dean
16:37:58.847 [main] INFO  [DAOExampleApp]: Creating type: ID: null; Description: Teaching and grading; Value: Teacher
16:37:58.848 [main] INFO  [DAOExampleApp]: Creating type: ID: null; Description: Studying; Value: Student
16:37:58.850 [main] INFO  [DAOExampleApp]: Type [ID = 2]: ID: null; Description: null; Value: null
16:37:58.851 [main] INFO  [DAOExampleApp]: --- Person Type DAO demo finished
16:38:34.455 [main] INFO  [DropSchemaApp]: Starting DROP SCHEMA application
16:38:34.492 [main] INFO  [DropSchemaApp]: Schema has been dropped
16:38:41.245 [main] INFO  [CreateSchemaApp]: Starting CREATE SCHEMA application
16:38:41.279 [main] INFO  [CreateSchemaApp]: CREATE TABLE grade ( grade_id INT IDENTITY, description VARCHAR(100) NOT NULL, value INT UNIQUE NOT NULL);
16:38:41.279 [main] INFO  [CreateSchemaApp]: CREATE TABLE person ( person_id INT IDENTITY, first_name VARCHAR(100) NOT NULL, middle_name VARCHAR(100), last_name VARCHAR(100) NOT NULL, birthday DATE NOT NULL, date_start DATE NOT NULL, person_type_id INT NOT NULL, person_status_id INT NOT NULL);
16:38:41.280 [main] INFO  [CreateSchemaApp]: CREATE TABLE subject ( subject_id INT IDENTITY, subject_name VARCHAR(100) NOT NULL UNIQUE, teacher_id INT, semester_id INT NOT NULL);
16:38:41.280 [main] INFO  [CreateSchemaApp]: CREATE TABLE semester ( semester_id INT IDENTITY, semester_name VARCHAR(20) NOT NULL UNIQUE, semester_date_start DATE NOT NULL, semester_date_end DATE NOT NULL);
16:38:41.280 [main] INFO  [CreateSchemaApp]: CREATE TABLE journal ( record_id INT IDENTITY, person_id INT NOT NULL, subject_id INT NOT NULL, grade_id INT NOT NULL, grade_date TIMESTAMP NOT NULL DEFAULT CURRENT_DATE(), FOREIGN KEY (grade_id) REFERENCES grade (grade_id) ON DELETE CASCADE, FOREIGN KEY (person_id) REFERENCES person (person_id) ON DELETE CASCADE, FOREIGN KEY (subject_id) REFERENCES subject (subject_id) ON DELETE CASCADE);
16:38:41.280 [main] INFO  [CreateSchemaApp]: CREATE TABLE phone_number ( phone_number_id INT IDENTITY, phone_number VARCHAR(20) NOT NULL UNIQUE, person_id INT NOT NULL, FOREIGN KEY (person_id) REFERENCES person (person_id) ON DELETE CASCADE);
16:38:41.280 [main] INFO  [CreateSchemaApp]: CREATE TABLE person_type ( person_type_id INT IDENTITY, description VARCHAR(100), value VARCHAR(20) NOT NULL UNIQUE);
16:38:41.280 [main] INFO  [CreateSchemaApp]: CREATE TABLE person_status ( person_status_id INT IDENTITY, description VARCHAR(100), value VARCHAR(20) NOT NULL UNIQUE);
16:38:41.281 [main] INFO  [CreateSchemaApp]: ALTER TABLE person ADD FOREIGN KEY (person_type_id) REFERENCES person_type (person_type_id)
16:38:41.281 [main] INFO  [CreateSchemaApp]: ALTER TABLE person ADD FOREIGN KEY (person_status_id) REFERENCES person_status (person_status_id)
16:38:41.281 [main] INFO  [CreateSchemaApp]: ALTER TABLE subject ADD FOREIGN KEY (teacher_id) REFERENCES person (person_id) ON DELETE CASCADE;
16:38:41.281 [main] INFO  [CreateSchemaApp]: ALTER TABLE subject ADD FOREIGN KEY (semester_id) REFERENCES semester (semester_id) ON DELETE CASCADE;
16:38:41.294 [main] INFO  [CreateSchemaApp]: Schema has been created
16:38:45.616 [main] INFO  [DAOExampleApp]: --- Grade DAO demo
16:38:45.618 [main] INFO  [DAOExampleApp]: Creating grade: ID: null; Description: Fail; Value: 1
16:38:45.665 [main] INFO  [DAOExampleApp]: Creating grade: ID: null; Description: Pass; Value: 2
16:38:45.666 [main] INFO  [DAOExampleApp]: Creating grade: ID: null; Description: Average; Value: 3
16:38:45.666 [main] INFO  [DAOExampleApp]: Creating grade: ID: null; Description: Good; Value: 4
16:38:45.667 [main] INFO  [DAOExampleApp]: Creating grade: ID: null; Description: Very good; Value: 5
16:38:45.669 [main] INFO  [DAOExampleApp]: Grade [ID = 3]: ID: 3; Description: Average; Value: 3
16:38:45.671 [main] INFO  [DAOExampleApp]: ID: 1; Description: Fail; Value: 1
16:38:45.671 [main] INFO  [DAOExampleApp]: ID: 3; Description: Average; Value: 3
16:38:45.672 [main] INFO  [DAOExampleApp]: ID: 4; Description: Good; Value: 4
16:38:45.672 [main] INFO  [DAOExampleApp]: ID: 5; Description: Very good; Value: 5
16:38:45.672 [main] INFO  [DAOExampleApp]: --- Grade DAO demo finished
16:38:45.672 [main] INFO  [DAOExampleApp]: --- Person Type DAO demo
16:38:45.673 [main] INFO  [DAOExampleApp]: Creating type: ID: null; Description: Administration; Value: Dean
16:38:45.674 [main] INFO  [DAOExampleApp]: Creating type: ID: null; Description: Teaching and grading; Value: Teacher
16:38:45.674 [main] INFO  [DAOExampleApp]: Creating type: ID: null; Description: Studying; Value: Student
16:38:45.676 [main] INFO  [DAOExampleApp]: Type [ID = 2]: ID: null; Description: null; Value: null
16:38:45.677 [main] INFO  [DAOExampleApp]: --- Person Type DAO demo finished
16:33:34.103 [main] INFO  [DropSchemaApp]: Starting DROP SCHEMA application
16:33:34.149 [main] ERROR [DropSchemaApp]: Can't drop schema
java.sql.SQLException: No suitable driver found for null~/null
	at java.sql.DriverManager.getConnection(DriverManager.java:689) ~[?:1.8.0_111]
	at java.sql.DriverManager.getConnection(DriverManager.java:247) ~[?:1.8.0_111]
	at com.nixsolutions.jdbc.main.DropSchemaApp.main(DropSchemaApp.java:41) [classes/:?]
16:33:59.744 [main] INFO  [DropSchemaApp]: Starting DROP SCHEMA application
16:33:59.845 [main] INFO  [DropSchemaApp]: Schema has been dropped
16:34:13.822 [main] INFO  [CreateSchemaApp]: Starting CREATE SCHEMA application
16:34:13.859 [main] INFO  [CreateSchemaApp]: CREATE TABLE grade ( grade_id INT IDENTITY, description VARCHAR(100) NOT NULL, value INT UNIQUE NOT NULL);
16:34:13.859 [main] INFO  [CreateSchemaApp]: CREATE TABLE person ( person_id INT IDENTITY, first_name VARCHAR(100) NOT NULL, middle_name VARCHAR(100), last_name VARCHAR(100) NOT NULL, birthday DATE NOT NULL, date_start DATE NOT NULL, person_type_id INT NOT NULL, person_status_id INT NOT NULL);
16:34:13.859 [main] INFO  [CreateSchemaApp]: CREATE TABLE subject ( subject_id INT IDENTITY, subject_name VARCHAR(100) NOT NULL UNIQUE, teacher_id INT, semester_id INT NOT NULL);
16:34:13.860 [main] INFO  [CreateSchemaApp]: CREATE TABLE semester ( semester_id INT IDENTITY, semester_name VARCHAR(20) NOT NULL UNIQUE, semester_date_start DATE NOT NULL, semester_date_end DATE NOT NULL);
16:34:13.860 [main] INFO  [CreateSchemaApp]: CREATE TABLE journal ( record_id INT IDENTITY, person_id INT NOT NULL, subject_id INT NOT NULL, grade_id INT NOT NULL, grade_date TIMESTAMP NOT NULL DEFAULT CURRENT_DATE(), FOREIGN KEY (grade_id) REFERENCES grade (grade_id) ON DELETE CASCADE, FOREIGN KEY (person_id) REFERENCES person (person_id) ON DELETE CASCADE, FOREIGN KEY (subject_id) REFERENCES subject (subject_id) ON DELETE CASCADE);
16:34:13.860 [main] INFO  [CreateSchemaApp]: CREATE TABLE phone_number ( phone_number_id INT IDENTITY, phone_number VARCHAR(20) NOT NULL UNIQUE, person_id INT NOT NULL, FOREIGN KEY (person_id) REFERENCES person (person_id) ON DELETE CASCADE);
16:34:13.860 [main] INFO  [CreateSchemaApp]: CREATE TABLE person_type ( person_type_id INT IDENTITY, description VARCHAR(100), value VARCHAR(20) NOT NULL UNIQUE);
16:34:13.860 [main] INFO  [CreateSchemaApp]: CREATE TABLE person_status ( person_status_id INT IDENTITY, description VARCHAR(100), value VARCHAR(20) NOT NULL UNIQUE);
16:34:13.860 [main] INFO  [CreateSchemaApp]: ALTER TABLE person ADD FOREIGN KEY (person_type_id) REFERENCES person_type (person_type_id)
16:34:13.860 [main] INFO  [CreateSchemaApp]: ALTER TABLE person ADD FOREIGN KEY (person_status_id) REFERENCES person_status (person_status_id)
16:34:13.861 [main] INFO  [CreateSchemaApp]: ALTER TABLE subject ADD FOREIGN KEY (teacher_id) REFERENCES person (person_id) ON DELETE CASCADE;
16:34:13.861 [main] INFO  [CreateSchemaApp]: ALTER TABLE subject ADD FOREIGN KEY (semester_id) REFERENCES semester (semester_id) ON DELETE CASCADE;
16:34:13.885 [main] INFO  [CreateSchemaApp]: Schema has been created
18:19:18.110 [main] INFO  [DropSchemaApp]: Starting DROP SCHEMA application
18:19:18.868 [main] INFO  [DropSchemaApp]: Schema has been dropped
18:19:24.366 [main] INFO  [CreateSchemaApp]: Starting CREATE SCHEMA application
18:19:24.435 [main] INFO  [CreateSchemaApp]: CREATE TABLE grade ( grade_id INT IDENTITY, description VARCHAR(100) NOT NULL, value INT UNIQUE NOT NULL);
18:19:24.435 [main] INFO  [CreateSchemaApp]: CREATE TABLE person ( person_id INT IDENTITY, first_name VARCHAR(100) NOT NULL, middle_name VARCHAR(100), last_name VARCHAR(100) NOT NULL, birthday DATE NOT NULL, date_start DATE NOT NULL, person_type_id INT NOT NULL, person_status_id INT NOT NULL);
18:19:24.436 [main] INFO  [CreateSchemaApp]: CREATE TABLE subject ( subject_id INT IDENTITY, subject_name VARCHAR(100) NOT NULL UNIQUE, teacher_id INT, semester_id INT NOT NULL);
18:19:24.436 [main] INFO  [CreateSchemaApp]: CREATE TABLE semester ( semester_id INT IDENTITY, semester_name VARCHAR(20) NOT NULL UNIQUE, semester_date_start DATE NOT NULL, semester_date_end DATE NOT NULL);
18:19:24.436 [main] INFO  [CreateSchemaApp]: CREATE TABLE journal ( record_id INT IDENTITY, person_id INT NOT NULL, subject_id INT NOT NULL, grade_id INT NOT NULL, grade_date TIMESTAMP NOT NULL DEFAULT CURRENT_DATE(), FOREIGN KEY (grade_id) REFERENCES grade (grade_id) ON DELETE CASCADE, FOREIGN KEY (person_id) REFERENCES person (person_id) ON DELETE CASCADE, FOREIGN KEY (subject_id) REFERENCES subject (subject_id) ON DELETE CASCADE);
18:19:24.436 [main] INFO  [CreateSchemaApp]: CREATE TABLE phone_number ( phone_number_id INT IDENTITY, phone_number VARCHAR(20) NOT NULL UNIQUE, person_id INT NOT NULL, FOREIGN KEY (person_id) REFERENCES person (person_id) ON DELETE CASCADE);
18:19:24.436 [main] INFO  [CreateSchemaApp]: CREATE TABLE person_type ( person_type_id INT IDENTITY, description VARCHAR(100), value VARCHAR(20) NOT NULL UNIQUE);
18:19:24.436 [main] INFO  [CreateSchemaApp]: CREATE TABLE person_status ( person_status_id INT IDENTITY, description VARCHAR(100), value VARCHAR(20) NOT NULL UNIQUE);
18:19:24.436 [main] INFO  [CreateSchemaApp]: ALTER TABLE person ADD FOREIGN KEY (person_type_id) REFERENCES person_type (person_type_id)
18:19:24.437 [main] INFO  [CreateSchemaApp]: ALTER TABLE person ADD FOREIGN KEY (person_status_id) REFERENCES person_status (person_status_id)
18:19:24.437 [main] INFO  [CreateSchemaApp]: ALTER TABLE subject ADD FOREIGN KEY (teacher_id) REFERENCES person (person_id) ON DELETE CASCADE;
18:19:24.437 [main] INFO  [CreateSchemaApp]: ALTER TABLE subject ADD FOREIGN KEY (semester_id) REFERENCES semester (semester_id) ON DELETE CASCADE;
18:19:24.468 [main] INFO  [CreateSchemaApp]: Schema has been created
12:47:30.377 [main] INFO  [DropSchemaApp]: Starting DROP SCHEMA application
12:47:30.426 [main] INFO  [DropSchemaApp]: Schema has been dropped
12:48:07.159 [main] INFO  [CreateSchemaApp]: Starting CREATE SCHEMA application
12:48:07.201 [main] INFO  [CreateSchemaApp]: CREATE TABLE grade ( grade_id INT IDENTITY, description VARCHAR(100) NOT NULL, value INT UNIQUE NOT NULL);
12:48:07.201 [main] INFO  [CreateSchemaApp]: CREATE TABLE person ( person_id INT IDENTITY, first_name VARCHAR(100) NOT NULL, middle_name VARCHAR(100), last_name VARCHAR(100) NOT NULL, birthday DATE NOT NULL, date_start DATE NOT NULL, person_type_id INT NOT NULL, person_status_id INT NOT NULL);
12:48:07.201 [main] INFO  [CreateSchemaApp]: CREATE TABLE subject ( subject_id INT IDENTITY, subject_name VARCHAR(100) NOT NULL UNIQUE, teacher_id INT, semester_id INT NOT NULL);
12:48:07.201 [main] INFO  [CreateSchemaApp]: CREATE TABLE semester ( semester_id INT IDENTITY, semester_name VARCHAR(20) NOT NULL UNIQUE, semester_date_start DATE NOT NULL, semester_date_end DATE NOT NULL);
12:48:07.202 [main] INFO  [CreateSchemaApp]: CREATE TABLE journal ( record_id INT IDENTITY, person_id INT NOT NULL, subject_id INT NOT NULL, grade_id INT NOT NULL, grade_date TIMESTAMP NOT NULL DEFAULT CURRENT_DATE(), FOREIGN KEY (grade_id) REFERENCES grade (grade_id) ON DELETE CASCADE, FOREIGN KEY (person_id) REFERENCES person (person_id) ON DELETE CASCADE, FOREIGN KEY (subject_id) REFERENCES subject (subject_id) ON DELETE CASCADE);
12:48:07.202 [main] INFO  [CreateSchemaApp]: CREATE TABLE phone_number ( phone_number_id INT IDENTITY, phone_number VARCHAR(20) NOT NULL UNIQUE, person_id INT NOT NULL, FOREIGN KEY (person_id) REFERENCES person (person_id) ON DELETE CASCADE);
12:48:07.202 [main] INFO  [CreateSchemaApp]: CREATE TABLE person_type ( person_type_id INT IDENTITY, description VARCHAR(100), value VARCHAR(20) NOT NULL UNIQUE);
12:48:07.202 [main] INFO  [CreateSchemaApp]: CREATE TABLE person_status ( person_status_id INT IDENTITY, description VARCHAR(100), value VARCHAR(20) NOT NULL UNIQUE);
12:48:07.202 [main] INFO  [CreateSchemaApp]: ALTER TABLE person ADD FOREIGN KEY (person_type_id) REFERENCES person_type (person_type_id)
12:48:07.202 [main] INFO  [CreateSchemaApp]: ALTER TABLE person ADD FOREIGN KEY (person_status_id) REFERENCES person_status (person_status_id)
12:48:07.202 [main] INFO  [CreateSchemaApp]: ALTER TABLE subject ADD FOREIGN KEY (teacher_id) REFERENCES person (person_id) ON DELETE CASCADE;
12:48:07.203 [main] INFO  [CreateSchemaApp]: ALTER TABLE subject ADD FOREIGN KEY (semester_id) REFERENCES semester (semester_id) ON DELETE CASCADE;
12:48:07.213 [main] INFO  [CreateSchemaApp]: Schema has been created
12:50:17.413 [main] INFO  [DropSchemaApp]: Starting DROP SCHEMA application
12:50:17.462 [main] INFO  [DropSchemaApp]: Schema has been dropped
12:50:23.101 [main] INFO  [CreateSchemaApp]: Starting CREATE SCHEMA application
12:50:23.142 [main] INFO  [CreateSchemaApp]: CREATE TABLE grade ( grade_id INT IDENTITY, description VARCHAR(100) NOT NULL, value INT UNIQUE NOT NULL);
12:50:23.142 [main] INFO  [CreateSchemaApp]: CREATE TABLE person ( person_id INT IDENTITY, first_name VARCHAR(100) NOT NULL, middle_name VARCHAR(100), last_name VARCHAR(100) NOT NULL, birthday DATE NOT NULL, date_start DATE NOT NULL, person_type_id INT NOT NULL, person_status_id INT NOT NULL);
12:50:23.143 [main] INFO  [CreateSchemaApp]: CREATE TABLE subject ( subject_id INT IDENTITY, subject_name VARCHAR(100) NOT NULL UNIQUE, teacher_id INT, semester_id INT NOT NULL);
12:50:23.143 [main] INFO  [CreateSchemaApp]: CREATE TABLE semester ( semester_id INT IDENTITY, semester_name VARCHAR(20) NOT NULL UNIQUE, semester_date_start DATE NOT NULL, semester_date_end DATE NOT NULL);
12:50:23.143 [main] INFO  [CreateSchemaApp]: CREATE TABLE journal ( record_id INT IDENTITY, person_id INT NOT NULL, subject_id INT NOT NULL, grade_id INT NOT NULL, grade_date TIMESTAMP NOT NULL DEFAULT CURRENT_DATE(), FOREIGN KEY (grade_id) REFERENCES grade (grade_id) ON DELETE CASCADE, FOREIGN KEY (person_id) REFERENCES person (person_id) ON DELETE CASCADE, FOREIGN KEY (subject_id) REFERENCES subject (subject_id) ON DELETE CASCADE);
12:50:23.143 [main] INFO  [CreateSchemaApp]: CREATE TABLE phone_number ( phone_number_id INT IDENTITY, phone_number VARCHAR(20) NOT NULL UNIQUE, person_id INT NOT NULL, FOREIGN KEY (person_id) REFERENCES person (person_id) ON DELETE CASCADE);
12:50:23.143 [main] INFO  [CreateSchemaApp]: CREATE TABLE person_type ( person_type_id INT IDENTITY, description VARCHAR(100), value VARCHAR(20) NOT NULL UNIQUE);
12:50:23.143 [main] INFO  [CreateSchemaApp]: CREATE TABLE person_status ( person_status_id INT IDENTITY, description VARCHAR(100), value VARCHAR(20) NOT NULL UNIQUE);
12:50:23.144 [main] INFO  [CreateSchemaApp]: ALTER TABLE person ADD FOREIGN KEY (person_type_id) REFERENCES person_type (person_type_id)
12:50:23.144 [main] INFO  [CreateSchemaApp]: ALTER TABLE person ADD FOREIGN KEY (person_status_id) REFERENCES person_status (person_status_id)
12:50:23.144 [main] INFO  [CreateSchemaApp]: ALTER TABLE subject ADD FOREIGN KEY (teacher_id) REFERENCES person (person_id) ON DELETE CASCADE;
12:50:23.144 [main] INFO  [CreateSchemaApp]: ALTER TABLE subject ADD FOREIGN KEY (semester_id) REFERENCES semester (semester_id) ON DELETE CASCADE;
12:50:23.153 [main] INFO  [CreateSchemaApp]: Schema has been created
12:50:23.155 [main] INFO  [CreateSchemaApp]: Starting CREATE SCHEMA application
12:50:23.156 [main] INFO  [CreateSchemaApp]: CREATE TABLE grade ( grade_id INT IDENTITY, description VARCHAR(100) NOT NULL, value INT UNIQUE NOT NULL);
12:50:23.156 [main] INFO  [CreateSchemaApp]: CREATE TABLE person ( person_id INT IDENTITY, first_name VARCHAR(100) NOT NULL, middle_name VARCHAR(100), last_name VARCHAR(100) NOT NULL, birthday DATE NOT NULL, date_start DATE NOT NULL, person_type_id INT NOT NULL, person_status_id INT NOT NULL);
12:50:23.156 [main] INFO  [CreateSchemaApp]: CREATE TABLE subject ( subject_id INT IDENTITY, subject_name VARCHAR(100) NOT NULL UNIQUE, teacher_id INT, semester_id INT NOT NULL);
12:50:23.157 [main] INFO  [CreateSchemaApp]: CREATE TABLE semester ( semester_id INT IDENTITY, semester_name VARCHAR(20) NOT NULL UNIQUE, semester_date_start DATE NOT NULL, semester_date_end DATE NOT NULL);
12:50:23.157 [main] INFO  [CreateSchemaApp]: CREATE TABLE journal ( record_id INT IDENTITY, person_id INT NOT NULL, subject_id INT NOT NULL, grade_id INT NOT NULL, grade_date TIMESTAMP NOT NULL DEFAULT CURRENT_DATE(), FOREIGN KEY (grade_id) REFERENCES grade (grade_id) ON DELETE CASCADE, FOREIGN KEY (person_id) REFERENCES person (person_id) ON DELETE CASCADE, FOREIGN KEY (subject_id) REFERENCES subject (subject_id) ON DELETE CASCADE);
12:50:23.157 [main] INFO  [CreateSchemaApp]: CREATE TABLE phone_number ( phone_number_id INT IDENTITY, phone_number VARCHAR(20) NOT NULL UNIQUE, person_id INT NOT NULL, FOREIGN KEY (person_id) REFERENCES person (person_id) ON DELETE CASCADE);
12:50:23.157 [main] INFO  [CreateSchemaApp]: CREATE TABLE person_type ( person_type_id INT IDENTITY, description VARCHAR(100), value VARCHAR(20) NOT NULL UNIQUE);
12:50:23.157 [main] INFO  [CreateSchemaApp]: CREATE TABLE person_status ( person_status_id INT IDENTITY, description VARCHAR(100), value VARCHAR(20) NOT NULL UNIQUE);
12:50:23.157 [main] INFO  [CreateSchemaApp]: ALTER TABLE person ADD FOREIGN KEY (person_type_id) REFERENCES person_type (person_type_id)
12:50:23.158 [main] INFO  [CreateSchemaApp]: ALTER TABLE person ADD FOREIGN KEY (person_status_id) REFERENCES person_status (person_status_id)
12:50:23.158 [main] INFO  [CreateSchemaApp]: ALTER TABLE subject ADD FOREIGN KEY (teacher_id) REFERENCES person (person_id) ON DELETE CASCADE;
12:50:23.158 [main] INFO  [CreateSchemaApp]: ALTER TABLE subject ADD FOREIGN KEY (semester_id) REFERENCES semester (semester_id) ON DELETE CASCADE;
12:50:23.166 [main] ERROR [CreateSchemaApp]: Can't create schema
org.h2.jdbc.JdbcBatchUpdateException: Table "PERSON_STATUS" already exists; SQL statement:
CREATE TABLE person_status ( person_status_id INT IDENTITY, description VARCHAR(100), value VARCHAR(20) NOT NULL UNIQUE); [42101-193]
	at org.h2.jdbc.JdbcStatement.executeBatch(JdbcStatement.java:676) ~[h2-1.4.193.jar:1.4.193]
	at com.nixsolutions.jdbc.main.CreateSchemaApp.main(CreateSchemaApp.java:140) [classes/:?]
	at com.nixsolutions.jdbc.dao.impl.h2.BaseTest.<init>(BaseTest.java:50) [test-classes/:?]
	at com.nixsolutions.jdbc.dao.impl.h2.H2PersonTypeDAOImplTest.<init>(H2PersonTypeDAOImplTest.java:18) [test-classes/:?]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_45]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) [?:1.8.0_45]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) [?:1.8.0_45]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:422) [?:1.8.0_45]
	at junit.framework.TestSuite.createTest(TestSuite.java:65) [junit-4.12.jar:4.12]
	at junit.framework.TestSuite.addTestMethod(TestSuite.java:307) [junit-4.12.jar:4.12]
	at junit.framework.TestSuite.addTestsFromTestCase(TestSuite.java:150) [junit-4.12.jar:4.12]
	at junit.framework.TestSuite.<init>(TestSuite.java:129) [junit-4.12.jar:4.12]
	at org.junit.internal.runners.JUnit38ClassRunner.<init>(JUnit38ClassRunner.java:74) [junit-4.12.jar:4.12]
	at org.junit.internal.builders.JUnit3Builder.runnerForClass(JUnit3Builder.java:11) [junit-4.12.jar:4.12]
	at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:59) [junit-4.12.jar:4.12]
	at org.junit.internal.builders.AllDefaultPossibilitiesBuilder.runnerForClass(AllDefaultPossibilitiesBuilder.java:26) [junit-4.12.jar:4.12]
	at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:59) [junit-4.12.jar:4.12]
	at org.junit.internal.requests.ClassRequest.getRunner(ClassRequest.java:33) [junit-4.12.jar:4.12]
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader.createUnfilteredTest(JUnit4TestLoader.java:84) [.cp/:?]
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader.createTest(JUnit4TestLoader.java:70) [.cp/:?]
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader.loadTests(JUnit4TestLoader.java:43) [.cp/:?]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:444) [.cp/:?]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678) [.cp/:?]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382) [.cp/:?]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192) [.cp/:?]
12:50:23.171 [main] INFO  [CreateSchemaApp]: Starting CREATE SCHEMA application
12:50:23.172 [main] INFO  [CreateSchemaApp]: CREATE TABLE grade ( grade_id INT IDENTITY, description VARCHAR(100) NOT NULL, value INT UNIQUE NOT NULL);
12:50:23.173 [main] INFO  [CreateSchemaApp]: CREATE TABLE person ( person_id INT IDENTITY, first_name VARCHAR(100) NOT NULL, middle_name VARCHAR(100), last_name VARCHAR(100) NOT NULL, birthday DATE NOT NULL, date_start DATE NOT NULL, person_type_id INT NOT NULL, person_status_id INT NOT NULL);
12:50:23.173 [main] INFO  [CreateSchemaApp]: CREATE TABLE subject ( subject_id INT IDENTITY, subject_name VARCHAR(100) NOT NULL UNIQUE, teacher_id INT, semester_id INT NOT NULL);
12:50:23.173 [main] INFO  [CreateSchemaApp]: CREATE TABLE semester ( semester_id INT IDENTITY, semester_name VARCHAR(20) NOT NULL UNIQUE, semester_date_start DATE NOT NULL, semester_date_end DATE NOT NULL);
12:50:23.173 [main] INFO  [CreateSchemaApp]: CREATE TABLE journal ( record_id INT IDENTITY, person_id INT NOT NULL, subject_id INT NOT NULL, grade_id INT NOT NULL, grade_date TIMESTAMP NOT NULL DEFAULT CURRENT_DATE(), FOREIGN KEY (grade_id) REFERENCES grade (grade_id) ON DELETE CASCADE, FOREIGN KEY (person_id) REFERENCES person (person_id) ON DELETE CASCADE, FOREIGN KEY (subject_id) REFERENCES subject (subject_id) ON DELETE CASCADE);
12:50:23.173 [main] INFO  [CreateSchemaApp]: CREATE TABLE phone_number ( phone_number_id INT IDENTITY, phone_number VARCHAR(20) NOT NULL UNIQUE, person_id INT NOT NULL, FOREIGN KEY (person_id) REFERENCES person (person_id) ON DELETE CASCADE);
12:50:23.173 [main] INFO  [CreateSchemaApp]: CREATE TABLE person_type ( person_type_id INT IDENTITY, description VARCHAR(100), value VARCHAR(20) NOT NULL UNIQUE);
12:50:23.174 [main] INFO  [CreateSchemaApp]: CREATE TABLE person_status ( person_status_id INT IDENTITY, description VARCHAR(100), value VARCHAR(20) NOT NULL UNIQUE);
12:50:23.174 [main] INFO  [CreateSchemaApp]: ALTER TABLE person ADD FOREIGN KEY (person_type_id) REFERENCES person_type (person_type_id)
12:50:23.174 [main] INFO  [CreateSchemaApp]: ALTER TABLE person ADD FOREIGN KEY (person_status_id) REFERENCES person_status (person_status_id)
12:50:23.174 [main] INFO  [CreateSchemaApp]: ALTER TABLE subject ADD FOREIGN KEY (teacher_id) REFERENCES person (person_id) ON DELETE CASCADE;
12:50:23.174 [main] INFO  [CreateSchemaApp]: ALTER TABLE subject ADD FOREIGN KEY (semester_id) REFERENCES semester (semester_id) ON DELETE CASCADE;
12:50:23.182 [main] ERROR [CreateSchemaApp]: Can't create schema
org.h2.jdbc.JdbcBatchUpdateException: Table "PERSON_STATUS" already exists; SQL statement:
CREATE TABLE person_status ( person_status_id INT IDENTITY, description VARCHAR(100), value VARCHAR(20) NOT NULL UNIQUE); [42101-193]
	at org.h2.jdbc.JdbcStatement.executeBatch(JdbcStatement.java:676) ~[h2-1.4.193.jar:1.4.193]
	at com.nixsolutions.jdbc.main.CreateSchemaApp.main(CreateSchemaApp.java:140) [classes/:?]
	at com.nixsolutions.jdbc.dao.impl.h2.BaseTest.<init>(BaseTest.java:50) [test-classes/:?]
	at com.nixsolutions.jdbc.dao.impl.h2.H2PersonTypeDAOImplTest.<init>(H2PersonTypeDAOImplTest.java:18) [test-classes/:?]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_45]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) [?:1.8.0_45]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) [?:1.8.0_45]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:422) [?:1.8.0_45]
	at junit.framework.TestSuite.createTest(TestSuite.java:65) [junit-4.12.jar:4.12]
	at junit.framework.TestSuite.addTestMethod(TestSuite.java:307) [junit-4.12.jar:4.12]
	at junit.framework.TestSuite.addTestsFromTestCase(TestSuite.java:150) [junit-4.12.jar:4.12]
	at junit.framework.TestSuite.<init>(TestSuite.java:129) [junit-4.12.jar:4.12]
	at org.junit.internal.runners.JUnit38ClassRunner.<init>(JUnit38ClassRunner.java:74) [junit-4.12.jar:4.12]
	at org.junit.internal.builders.JUnit3Builder.runnerForClass(JUnit3Builder.java:11) [junit-4.12.jar:4.12]
	at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:59) [junit-4.12.jar:4.12]
	at org.junit.internal.builders.AllDefaultPossibilitiesBuilder.runnerForClass(AllDefaultPossibilitiesBuilder.java:26) [junit-4.12.jar:4.12]
	at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:59) [junit-4.12.jar:4.12]
	at org.junit.internal.requests.ClassRequest.getRunner(ClassRequest.java:33) [junit-4.12.jar:4.12]
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader.createUnfilteredTest(JUnit4TestLoader.java:84) [.cp/:?]
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader.createTest(JUnit4TestLoader.java:70) [.cp/:?]
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader.loadTests(JUnit4TestLoader.java:43) [.cp/:?]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:444) [.cp/:?]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678) [.cp/:?]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382) [.cp/:?]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192) [.cp/:?]
12:50:23.183 [main] INFO  [CreateSchemaApp]: Starting CREATE SCHEMA application
12:50:23.185 [main] INFO  [CreateSchemaApp]: CREATE TABLE grade ( grade_id INT IDENTITY, description VARCHAR(100) NOT NULL, value INT UNIQUE NOT NULL);
12:50:23.185 [main] INFO  [CreateSchemaApp]: CREATE TABLE person ( person_id INT IDENTITY, first_name VARCHAR(100) NOT NULL, middle_name VARCHAR(100), last_name VARCHAR(100) NOT NULL, birthday DATE NOT NULL, date_start DATE NOT NULL, person_type_id INT NOT NULL, person_status_id INT NOT NULL);
12:50:23.185 [main] INFO  [CreateSchemaApp]: CREATE TABLE subject ( subject_id INT IDENTITY, subject_name VARCHAR(100) NOT NULL UNIQUE, teacher_id INT, semester_id INT NOT NULL);
12:50:23.185 [main] INFO  [CreateSchemaApp]: CREATE TABLE semester ( semester_id INT IDENTITY, semester_name VARCHAR(20) NOT NULL UNIQUE, semester_date_start DATE NOT NULL, semester_date_end DATE NOT NULL);
12:50:23.185 [main] INFO  [CreateSchemaApp]: CREATE TABLE journal ( record_id INT IDENTITY, person_id INT NOT NULL, subject_id INT NOT NULL, grade_id INT NOT NULL, grade_date TIMESTAMP NOT NULL DEFAULT CURRENT_DATE(), FOREIGN KEY (grade_id) REFERENCES grade (grade_id) ON DELETE CASCADE, FOREIGN KEY (person_id) REFERENCES person (person_id) ON DELETE CASCADE, FOREIGN KEY (subject_id) REFERENCES subject (subject_id) ON DELETE CASCADE);
12:50:23.185 [main] INFO  [CreateSchemaApp]: CREATE TABLE phone_number ( phone_number_id INT IDENTITY, phone_number VARCHAR(20) NOT NULL UNIQUE, person_id INT NOT NULL, FOREIGN KEY (person_id) REFERENCES person (person_id) ON DELETE CASCADE);
12:50:23.186 [main] INFO  [CreateSchemaApp]: CREATE TABLE person_type ( person_type_id INT IDENTITY, description VARCHAR(100), value VARCHAR(20) NOT NULL UNIQUE);
12:50:23.186 [main] INFO  [CreateSchemaApp]: CREATE TABLE person_status ( person_status_id INT IDENTITY, description VARCHAR(100), value VARCHAR(20) NOT NULL UNIQUE);
12:50:23.186 [main] INFO  [CreateSchemaApp]: ALTER TABLE person ADD FOREIGN KEY (person_type_id) REFERENCES person_type (person_type_id)
12:50:23.186 [main] INFO  [CreateSchemaApp]: ALTER TABLE person ADD FOREIGN KEY (person_status_id) REFERENCES person_status (person_status_id)
12:50:23.186 [main] INFO  [CreateSchemaApp]: ALTER TABLE subject ADD FOREIGN KEY (teacher_id) REFERENCES person (person_id) ON DELETE CASCADE;
12:50:23.186 [main] INFO  [CreateSchemaApp]: ALTER TABLE subject ADD FOREIGN KEY (semester_id) REFERENCES semester (semester_id) ON DELETE CASCADE;
12:50:23.192 [main] ERROR [CreateSchemaApp]: Can't create schema
org.h2.jdbc.JdbcBatchUpdateException: Table "PERSON_STATUS" already exists; SQL statement:
CREATE TABLE person_status ( person_status_id INT IDENTITY, description VARCHAR(100), value VARCHAR(20) NOT NULL UNIQUE); [42101-193]
	at org.h2.jdbc.JdbcStatement.executeBatch(JdbcStatement.java:676) ~[h2-1.4.193.jar:1.4.193]
	at com.nixsolutions.jdbc.main.CreateSchemaApp.main(CreateSchemaApp.java:140) [classes/:?]
	at com.nixsolutions.jdbc.dao.impl.h2.BaseTest.<init>(BaseTest.java:50) [test-classes/:?]
	at com.nixsolutions.jdbc.dao.impl.h2.H2PersonTypeDAOImplTest.<init>(H2PersonTypeDAOImplTest.java:18) [test-classes/:?]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_45]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) [?:1.8.0_45]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) [?:1.8.0_45]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:422) [?:1.8.0_45]
	at junit.framework.TestSuite.createTest(TestSuite.java:65) [junit-4.12.jar:4.12]
	at junit.framework.TestSuite.addTestMethod(TestSuite.java:307) [junit-4.12.jar:4.12]
	at junit.framework.TestSuite.addTestsFromTestCase(TestSuite.java:150) [junit-4.12.jar:4.12]
	at junit.framework.TestSuite.<init>(TestSuite.java:129) [junit-4.12.jar:4.12]
	at org.junit.internal.runners.JUnit38ClassRunner.<init>(JUnit38ClassRunner.java:74) [junit-4.12.jar:4.12]
	at org.junit.internal.builders.JUnit3Builder.runnerForClass(JUnit3Builder.java:11) [junit-4.12.jar:4.12]
	at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:59) [junit-4.12.jar:4.12]
	at org.junit.internal.builders.AllDefaultPossibilitiesBuilder.runnerForClass(AllDefaultPossibilitiesBuilder.java:26) [junit-4.12.jar:4.12]
	at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:59) [junit-4.12.jar:4.12]
	at org.junit.internal.requests.ClassRequest.getRunner(ClassRequest.java:33) [junit-4.12.jar:4.12]
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader.createUnfilteredTest(JUnit4TestLoader.java:84) [.cp/:?]
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader.createTest(JUnit4TestLoader.java:70) [.cp/:?]
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader.loadTests(JUnit4TestLoader.java:43) [.cp/:?]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:444) [.cp/:?]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678) [.cp/:?]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382) [.cp/:?]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192) [.cp/:?]
12:50:23.193 [main] INFO  [CreateSchemaApp]: Starting CREATE SCHEMA application
12:50:23.194 [main] INFO  [CreateSchemaApp]: CREATE TABLE grade ( grade_id INT IDENTITY, description VARCHAR(100) NOT NULL, value INT UNIQUE NOT NULL);
12:50:23.194 [main] INFO  [CreateSchemaApp]: CREATE TABLE person ( person_id INT IDENTITY, first_name VARCHAR(100) NOT NULL, middle_name VARCHAR(100), last_name VARCHAR(100) NOT NULL, birthday DATE NOT NULL, date_start DATE NOT NULL, person_type_id INT NOT NULL, person_status_id INT NOT NULL);
12:50:23.194 [main] INFO  [CreateSchemaApp]: CREATE TABLE subject ( subject_id INT IDENTITY, subject_name VARCHAR(100) NOT NULL UNIQUE, teacher_id INT, semester_id INT NOT NULL);
12:50:23.194 [main] INFO  [CreateSchemaApp]: CREATE TABLE semester ( semester_id INT IDENTITY, semester_name VARCHAR(20) NOT NULL UNIQUE, semester_date_start DATE NOT NULL, semester_date_end DATE NOT NULL);
12:50:23.195 [main] INFO  [CreateSchemaApp]: CREATE TABLE journal ( record_id INT IDENTITY, person_id INT NOT NULL, subject_id INT NOT NULL, grade_id INT NOT NULL, grade_date TIMESTAMP NOT NULL DEFAULT CURRENT_DATE(), FOREIGN KEY (grade_id) REFERENCES grade (grade_id) ON DELETE CASCADE, FOREIGN KEY (person_id) REFERENCES person (person_id) ON DELETE CASCADE, FOREIGN KEY (subject_id) REFERENCES subject (subject_id) ON DELETE CASCADE);
12:50:23.195 [main] INFO  [CreateSchemaApp]: CREATE TABLE phone_number ( phone_number_id INT IDENTITY, phone_number VARCHAR(20) NOT NULL UNIQUE, person_id INT NOT NULL, FOREIGN KEY (person_id) REFERENCES person (person_id) ON DELETE CASCADE);
12:50:23.195 [main] INFO  [CreateSchemaApp]: CREATE TABLE person_type ( person_type_id INT IDENTITY, description VARCHAR(100), value VARCHAR(20) NOT NULL UNIQUE);
12:50:23.195 [main] INFO  [CreateSchemaApp]: CREATE TABLE person_status ( person_status_id INT IDENTITY, description VARCHAR(100), value VARCHAR(20) NOT NULL UNIQUE);
12:50:23.195 [main] INFO  [CreateSchemaApp]: ALTER TABLE person ADD FOREIGN KEY (person_type_id) REFERENCES person_type (person_type_id)
12:50:23.195 [main] INFO  [CreateSchemaApp]: ALTER TABLE person ADD FOREIGN KEY (person_status_id) REFERENCES person_status (person_status_id)
12:50:23.195 [main] INFO  [CreateSchemaApp]: ALTER TABLE subject ADD FOREIGN KEY (teacher_id) REFERENCES person (person_id) ON DELETE CASCADE;
12:50:23.196 [main] INFO  [CreateSchemaApp]: ALTER TABLE subject ADD FOREIGN KEY (semester_id) REFERENCES semester (semester_id) ON DELETE CASCADE;
12:50:23.202 [main] ERROR [CreateSchemaApp]: Can't create schema
org.h2.jdbc.JdbcBatchUpdateException: Table "PERSON_STATUS" already exists; SQL statement:
CREATE TABLE person_status ( person_status_id INT IDENTITY, description VARCHAR(100), value VARCHAR(20) NOT NULL UNIQUE); [42101-193]
	at org.h2.jdbc.JdbcStatement.executeBatch(JdbcStatement.java:676) ~[h2-1.4.193.jar:1.4.193]
	at com.nixsolutions.jdbc.main.CreateSchemaApp.main(CreateSchemaApp.java:140) [classes/:?]
	at com.nixsolutions.jdbc.dao.impl.h2.BaseTest.<init>(BaseTest.java:50) [test-classes/:?]
	at com.nixsolutions.jdbc.dao.impl.h2.H2PersonTypeDAOImplTest.<init>(H2PersonTypeDAOImplTest.java:18) [test-classes/:?]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_45]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) [?:1.8.0_45]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) [?:1.8.0_45]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:422) [?:1.8.0_45]
	at junit.framework.TestSuite.createTest(TestSuite.java:65) [junit-4.12.jar:4.12]
	at junit.framework.TestSuite.addTestMethod(TestSuite.java:307) [junit-4.12.jar:4.12]
	at junit.framework.TestSuite.addTestsFromTestCase(TestSuite.java:150) [junit-4.12.jar:4.12]
	at junit.framework.TestSuite.<init>(TestSuite.java:129) [junit-4.12.jar:4.12]
	at org.junit.internal.runners.JUnit38ClassRunner.<init>(JUnit38ClassRunner.java:74) [junit-4.12.jar:4.12]
	at org.junit.internal.builders.JUnit3Builder.runnerForClass(JUnit3Builder.java:11) [junit-4.12.jar:4.12]
	at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:59) [junit-4.12.jar:4.12]
	at org.junit.internal.builders.AllDefaultPossibilitiesBuilder.runnerForClass(AllDefaultPossibilitiesBuilder.java:26) [junit-4.12.jar:4.12]
	at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:59) [junit-4.12.jar:4.12]
	at org.junit.internal.requests.ClassRequest.getRunner(ClassRequest.java:33) [junit-4.12.jar:4.12]
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader.createUnfilteredTest(JUnit4TestLoader.java:84) [.cp/:?]
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader.createTest(JUnit4TestLoader.java:70) [.cp/:?]
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader.loadTests(JUnit4TestLoader.java:43) [.cp/:?]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:444) [.cp/:?]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678) [.cp/:?]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382) [.cp/:?]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192) [.cp/:?]
12:50:23.203 [main] INFO  [CreateSchemaApp]: Starting CREATE SCHEMA application
12:50:23.205 [main] INFO  [CreateSchemaApp]: CREATE TABLE grade ( grade_id INT IDENTITY, description VARCHAR(100) NOT NULL, value INT UNIQUE NOT NULL);
12:50:23.205 [main] INFO  [CreateSchemaApp]: CREATE TABLE person ( person_id INT IDENTITY, first_name VARCHAR(100) NOT NULL, middle_name VARCHAR(100), last_name VARCHAR(100) NOT NULL, birthday DATE NOT NULL, date_start DATE NOT NULL, person_type_id INT NOT NULL, person_status_id INT NOT NULL);
12:50:23.205 [main] INFO  [CreateSchemaApp]: CREATE TABLE subject ( subject_id INT IDENTITY, subject_name VARCHAR(100) NOT NULL UNIQUE, teacher_id INT, semester_id INT NOT NULL);
12:50:23.205 [main] INFO  [CreateSchemaApp]: CREATE TABLE semester ( semester_id INT IDENTITY, semester_name VARCHAR(20) NOT NULL UNIQUE, semester_date_start DATE NOT NULL, semester_date_end DATE NOT NULL);
12:50:23.205 [main] INFO  [CreateSchemaApp]: CREATE TABLE journal ( record_id INT IDENTITY, person_id INT NOT NULL, subject_id INT NOT NULL, grade_id INT NOT NULL, grade_date TIMESTAMP NOT NULL DEFAULT CURRENT_DATE(), FOREIGN KEY (grade_id) REFERENCES grade (grade_id) ON DELETE CASCADE, FOREIGN KEY (person_id) REFERENCES person (person_id) ON DELETE CASCADE, FOREIGN KEY (subject_id) REFERENCES subject (subject_id) ON DELETE CASCADE);
12:50:23.206 [main] INFO  [CreateSchemaApp]: CREATE TABLE phone_number ( phone_number_id INT IDENTITY, phone_number VARCHAR(20) NOT NULL UNIQUE, person_id INT NOT NULL, FOREIGN KEY (person_id) REFERENCES person (person_id) ON DELETE CASCADE);
12:50:23.206 [main] INFO  [CreateSchemaApp]: CREATE TABLE person_type ( person_type_id INT IDENTITY, description VARCHAR(100), value VARCHAR(20) NOT NULL UNIQUE);
12:50:23.206 [main] INFO  [CreateSchemaApp]: CREATE TABLE person_status ( person_status_id INT IDENTITY, description VARCHAR(100), value VARCHAR(20) NOT NULL UNIQUE);
12:50:23.206 [main] INFO  [CreateSchemaApp]: ALTER TABLE person ADD FOREIGN KEY (person_type_id) REFERENCES person_type (person_type_id)
12:50:23.206 [main] INFO  [CreateSchemaApp]: ALTER TABLE person ADD FOREIGN KEY (person_status_id) REFERENCES person_status (person_status_id)
12:50:23.206 [main] INFO  [CreateSchemaApp]: ALTER TABLE subject ADD FOREIGN KEY (teacher_id) REFERENCES person (person_id) ON DELETE CASCADE;
12:50:23.206 [main] INFO  [CreateSchemaApp]: ALTER TABLE subject ADD FOREIGN KEY (semester_id) REFERENCES semester (semester_id) ON DELETE CASCADE;
12:50:23.212 [main] ERROR [CreateSchemaApp]: Can't create schema
org.h2.jdbc.JdbcBatchUpdateException: Table "PERSON_STATUS" already exists; SQL statement:
CREATE TABLE person_status ( person_status_id INT IDENTITY, description VARCHAR(100), value VARCHAR(20) NOT NULL UNIQUE); [42101-193]
	at org.h2.jdbc.JdbcStatement.executeBatch(JdbcStatement.java:676) ~[h2-1.4.193.jar:1.4.193]
	at com.nixsolutions.jdbc.main.CreateSchemaApp.main(CreateSchemaApp.java:140) [classes/:?]
	at com.nixsolutions.jdbc.dao.impl.h2.BaseTest.<init>(BaseTest.java:50) [test-classes/:?]
	at com.nixsolutions.jdbc.dao.impl.h2.H2PersonTypeDAOImplTest.<init>(H2PersonTypeDAOImplTest.java:18) [test-classes/:?]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_45]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) [?:1.8.0_45]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) [?:1.8.0_45]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:422) [?:1.8.0_45]
	at junit.framework.TestSuite.createTest(TestSuite.java:65) [junit-4.12.jar:4.12]
	at junit.framework.TestSuite.addTestMethod(TestSuite.java:307) [junit-4.12.jar:4.12]
	at junit.framework.TestSuite.addTestsFromTestCase(TestSuite.java:150) [junit-4.12.jar:4.12]
	at junit.framework.TestSuite.<init>(TestSuite.java:129) [junit-4.12.jar:4.12]
	at org.junit.internal.runners.JUnit38ClassRunner.<init>(JUnit38ClassRunner.java:74) [junit-4.12.jar:4.12]
	at org.junit.internal.builders.JUnit3Builder.runnerForClass(JUnit3Builder.java:11) [junit-4.12.jar:4.12]
	at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:59) [junit-4.12.jar:4.12]
	at org.junit.internal.builders.AllDefaultPossibilitiesBuilder.runnerForClass(AllDefaultPossibilitiesBuilder.java:26) [junit-4.12.jar:4.12]
	at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:59) [junit-4.12.jar:4.12]
	at org.junit.internal.requests.ClassRequest.getRunner(ClassRequest.java:33) [junit-4.12.jar:4.12]
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader.createUnfilteredTest(JUnit4TestLoader.java:84) [.cp/:?]
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader.createTest(JUnit4TestLoader.java:70) [.cp/:?]
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader.loadTests(JUnit4TestLoader.java:43) [.cp/:?]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:444) [.cp/:?]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678) [.cp/:?]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382) [.cp/:?]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192) [.cp/:?]
13:01:23.044 [main] ERROR [H2PersonTypeDAOImpl]: Can't delete person type
org.h2.jdbc.JdbcSQLException: Referential integrity constraint violation: "CONSTRAINT_8C: PUBLIC.PERSON FOREIGN KEY(PERSON_TYPE_ID) REFERENCES PUBLIC.PERSON_TYPE(PERSON_TYPE_ID) (2)"; SQL statement:
DELETE FROM person_type where person_type_id = ? [23503-193]
	at org.h2.engine.SessionRemote.done(SessionRemote.java:624) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.command.CommandRemote.executeUpdate(CommandRemote.java:191) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:160) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:146) ~[h2-1.4.193.jar:1.4.193]
	at com.nixsolutions.jdbc.dao.impl.h2.H2PersonTypeDAOImpl.delete(H2PersonTypeDAOImpl.java:82) [classes/:?]
	at com.nixsolutions.jdbc.dao.impl.h2.BaseTest.testShouldDeleteBean(BaseTest.java:105) [test-classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_45]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_45]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_45]
	at java.lang.reflect.Method.invoke(Method.java:497) ~[?:1.8.0_45]
	at junit.framework.TestCase.runTest(TestCase.java:176) [junit-4.12.jar:4.12]
	at junit.framework.TestCase.runBare(TestCase.java:141) [junit-4.12.jar:4.12]
	at junit.framework.TestResult$1.protect(TestResult.java:122) [junit-4.12.jar:4.12]
	at junit.framework.TestResult.runProtected(TestResult.java:142) [junit-4.12.jar:4.12]
	at junit.framework.TestResult.run(TestResult.java:125) [junit-4.12.jar:4.12]
	at junit.framework.TestCase.run(TestCase.java:129) [junit-4.12.jar:4.12]
	at junit.framework.TestSuite.runTest(TestSuite.java:252) [junit-4.12.jar:4.12]
	at junit.framework.TestSuite.run(TestSuite.java:247) [junit-4.12.jar:4.12]
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:86) [junit-4.12.jar:4.12]
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86) [.cp/:?]
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38) [.cp/:?]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459) [.cp/:?]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678) [.cp/:?]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382) [.cp/:?]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192) [.cp/:?]
13:02:20.798 [main] ERROR [H2PersonStatusDAOImpl]: Can't delete person status
org.h2.jdbc.JdbcSQLException: Referential integrity constraint violation: "CONSTRAINT_8C7: PUBLIC.PERSON FOREIGN KEY(PERSON_STATUS_ID) REFERENCES PUBLIC.PERSON_STATUS(PERSON_STATUS_ID) (2)"; SQL statement:
DELETE FROM person_status where person_status_id = ? [23503-193]
	at org.h2.engine.SessionRemote.done(SessionRemote.java:624) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.command.CommandRemote.executeUpdate(CommandRemote.java:191) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:160) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:146) ~[h2-1.4.193.jar:1.4.193]
	at com.nixsolutions.jdbc.dao.impl.h2.H2PersonStatusDAOImpl.delete(H2PersonStatusDAOImpl.java:82) [classes/:?]
	at com.nixsolutions.jdbc.dao.impl.h2.BaseTest.testShouldDeleteBean(BaseTest.java:105) [test-classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_45]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_45]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_45]
	at java.lang.reflect.Method.invoke(Method.java:497) ~[?:1.8.0_45]
	at junit.framework.TestCase.runTest(TestCase.java:176) [junit-4.12.jar:4.12]
	at junit.framework.TestCase.runBare(TestCase.java:141) [junit-4.12.jar:4.12]
	at junit.framework.TestResult$1.protect(TestResult.java:122) [junit-4.12.jar:4.12]
	at junit.framework.TestResult.runProtected(TestResult.java:142) [junit-4.12.jar:4.12]
	at junit.framework.TestResult.run(TestResult.java:125) [junit-4.12.jar:4.12]
	at junit.framework.TestCase.run(TestCase.java:129) [junit-4.12.jar:4.12]
	at junit.framework.TestSuite.runTest(TestSuite.java:252) [junit-4.12.jar:4.12]
	at junit.framework.TestSuite.run(TestSuite.java:247) [junit-4.12.jar:4.12]
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:86) [junit-4.12.jar:4.12]
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86) [.cp/:?]
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38) [.cp/:?]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459) [.cp/:?]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678) [.cp/:?]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382) [.cp/:?]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192) [.cp/:?]
13:04:26.026 [main] ERROR [H2PersonStatusDAOImpl]: Can't delete person status
org.h2.jdbc.JdbcSQLException: Referential integrity constraint violation: "CONSTRAINT_8C7: PUBLIC.PERSON FOREIGN KEY(PERSON_STATUS_ID) REFERENCES PUBLIC.PERSON_STATUS(PERSON_STATUS_ID) (2)"; SQL statement:
DELETE FROM person_status where person_status_id = ? [23503-193]
	at org.h2.engine.SessionRemote.done(SessionRemote.java:624) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.command.CommandRemote.executeUpdate(CommandRemote.java:191) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:160) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:146) ~[h2-1.4.193.jar:1.4.193]
	at com.nixsolutions.jdbc.dao.impl.h2.H2PersonStatusDAOImpl.delete(H2PersonStatusDAOImpl.java:82) [classes/:?]
	at com.nixsolutions.jdbc.dao.impl.h2.BaseTest.testShouldDeleteBean(BaseTest.java:105) [test-classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_45]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_45]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_45]
	at java.lang.reflect.Method.invoke(Method.java:497) ~[?:1.8.0_45]
	at junit.framework.TestCase.runTest(TestCase.java:176) [junit-4.12.jar:4.12]
	at junit.framework.TestCase.runBare(TestCase.java:141) [junit-4.12.jar:4.12]
	at junit.framework.TestResult$1.protect(TestResult.java:122) [junit-4.12.jar:4.12]
	at junit.framework.TestResult.runProtected(TestResult.java:142) [junit-4.12.jar:4.12]
	at junit.framework.TestResult.run(TestResult.java:125) [junit-4.12.jar:4.12]
	at junit.framework.TestCase.run(TestCase.java:129) [junit-4.12.jar:4.12]
	at junit.framework.TestSuite.runTest(TestSuite.java:252) [junit-4.12.jar:4.12]
	at junit.framework.TestSuite.run(TestSuite.java:247) [junit-4.12.jar:4.12]
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:86) [junit-4.12.jar:4.12]
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86) [.cp/:?]
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38) [.cp/:?]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459) [.cp/:?]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678) [.cp/:?]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382) [.cp/:?]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192) [.cp/:?]
13:05:25.269 [main] INFO  [DropSchemaApp]: Starting DROP SCHEMA application
13:05:25.376 [main] INFO  [DropSchemaApp]: Schema has been dropped
13:05:30.121 [main] INFO  [CreateSchemaApp]: Starting CREATE SCHEMA application
13:05:30.162 [main] INFO  [CreateSchemaApp]: CREATE TABLE grade ( grade_id INT IDENTITY, description VARCHAR(100) NOT NULL, value INT UNIQUE NOT NULL);
13:05:30.163 [main] INFO  [CreateSchemaApp]: CREATE TABLE person ( person_id INT IDENTITY, first_name VARCHAR(100) NOT NULL, middle_name VARCHAR(100), last_name VARCHAR(100) NOT NULL, birthday DATE NOT NULL, date_start DATE NOT NULL, person_type_id INT NOT NULL, person_status_id INT NOT NULL);
13:05:30.163 [main] INFO  [CreateSchemaApp]: CREATE TABLE subject ( subject_id INT IDENTITY, subject_name VARCHAR(100) NOT NULL UNIQUE, teacher_id INT, semester_id INT NOT NULL);
13:05:30.163 [main] INFO  [CreateSchemaApp]: CREATE TABLE semester ( semester_id INT IDENTITY, semester_name VARCHAR(20) NOT NULL UNIQUE, semester_date_start DATE NOT NULL, semester_date_end DATE NOT NULL);
13:05:30.163 [main] INFO  [CreateSchemaApp]: CREATE TABLE journal ( record_id INT IDENTITY, person_id INT NOT NULL, subject_id INT NOT NULL, grade_id INT NOT NULL, grade_date TIMESTAMP NOT NULL DEFAULT CURRENT_DATE(), FOREIGN KEY (grade_id) REFERENCES grade (grade_id) ON DELETE CASCADE, FOREIGN KEY (person_id) REFERENCES person (person_id) ON DELETE CASCADE, FOREIGN KEY (subject_id) REFERENCES subject (subject_id) ON DELETE CASCADE);
13:05:30.163 [main] INFO  [CreateSchemaApp]: CREATE TABLE phone_number ( phone_number_id INT IDENTITY, phone_number VARCHAR(20) NOT NULL UNIQUE, person_id INT NOT NULL, FOREIGN KEY (person_id) REFERENCES person (person_id) ON DELETE CASCADE);
13:05:30.163 [main] INFO  [CreateSchemaApp]: CREATE TABLE person_type ( person_type_id INT IDENTITY, description VARCHAR(100), value VARCHAR(20) NOT NULL UNIQUE);
13:05:30.164 [main] INFO  [CreateSchemaApp]: CREATE TABLE person_status ( person_status_id INT IDENTITY, description VARCHAR(100), value VARCHAR(20) NOT NULL UNIQUE);
13:05:30.164 [main] INFO  [CreateSchemaApp]: ALTER TABLE person ADD FOREIGN KEY (person_type_id) REFERENCES person_type (person_type_id)
13:05:30.164 [main] INFO  [CreateSchemaApp]: ALTER TABLE person ADD FOREIGN KEY (person_status_id) REFERENCES person_status (person_status_id)
13:05:30.164 [main] INFO  [CreateSchemaApp]: ALTER TABLE subject ADD FOREIGN KEY (teacher_id) REFERENCES person (person_id) ON DELETE CASCADE;
13:05:30.164 [main] INFO  [CreateSchemaApp]: ALTER TABLE subject ADD FOREIGN KEY (semester_id) REFERENCES semester (semester_id) ON DELETE CASCADE;
13:05:30.174 [main] INFO  [CreateSchemaApp]: Schema has been created
13:21:41.426 [main] ERROR [H2SemesterDAOImpl]: Can't add grade [ID: 2; Name: 2nd upd; Start date: 2016-01-06; End date: 2016-05-03]
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "UPDATE SEMESTER SET SEMESTER_NAME = ?, SEMESTER_DATE_START = ? SEMESTER_DATE_END[*] = ? WHERE SEMESTER_ID = ? "; SQL statement:
UPDATE semester SET semester_name = ?, semester_date_start = ? semester_date_end = ? WHERE semester_id = ? [42000-193]
	at org.h2.engine.SessionRemote.done(SessionRemote.java:624) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.command.CommandRemote.prepare(CommandRemote.java:68) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.command.CommandRemote.<init>(CommandRemote.java:45) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.engine.SessionRemote.prepareCommand(SessionRemote.java:494) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1203) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:73) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:287) ~[h2-1.4.193.jar:1.4.193]
	at com.nixsolutions.jdbc.dao.impl.h2.H2SemesterDAOImpl.update(H2SemesterDAOImpl.java:57) [classes/:?]
	at com.nixsolutions.jdbc.dao.impl.h2.H2SemesterDAOImpl.update(H2SemesterDAOImpl.java:1) [classes/:?]
	at com.nixsolutions.jdbc.dao.impl.h2.BaseTest.testShouldUpdateBean(BaseTest.java:86) [test-classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_45]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_45]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_45]
	at java.lang.reflect.Method.invoke(Method.java:497) ~[?:1.8.0_45]
	at junit.framework.TestCase.runTest(TestCase.java:176) [junit-4.12.jar:4.12]
	at junit.framework.TestCase.runBare(TestCase.java:141) [junit-4.12.jar:4.12]
	at junit.framework.TestResult$1.protect(TestResult.java:122) [junit-4.12.jar:4.12]
	at junit.framework.TestResult.runProtected(TestResult.java:142) [junit-4.12.jar:4.12]
	at junit.framework.TestResult.run(TestResult.java:125) [junit-4.12.jar:4.12]
	at junit.framework.TestCase.run(TestCase.java:129) [junit-4.12.jar:4.12]
	at junit.framework.TestSuite.runTest(TestSuite.java:252) [junit-4.12.jar:4.12]
	at junit.framework.TestSuite.run(TestSuite.java:247) [junit-4.12.jar:4.12]
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:86) [junit-4.12.jar:4.12]
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86) [.cp/:?]
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38) [.cp/:?]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459) [.cp/:?]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678) [.cp/:?]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382) [.cp/:?]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192) [.cp/:?]
13:23:52.533 [main] ERROR [H2SemesterDAOImpl]: Can't add grade [ID: 2; Name: 2nd upd; Start date: 2016-01-06; End date: 2016-05-03]
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "UPDATE SEMESTER SET SEMESTER_NAME = ?, SEMESTER_DATE_START = ? SEMESTER_DATE_END[*] = ? WHERE SEMESTER_ID = ? "; SQL statement:
UPDATE semester SET semester_name = ?, semester_date_start = ? semester_date_end = ? WHERE semester_id = ? [42000-193]
	at org.h2.engine.SessionRemote.done(SessionRemote.java:624) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.command.CommandRemote.prepare(CommandRemote.java:68) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.command.CommandRemote.<init>(CommandRemote.java:45) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.engine.SessionRemote.prepareCommand(SessionRemote.java:494) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1203) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:73) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:287) ~[h2-1.4.193.jar:1.4.193]
	at com.nixsolutions.jdbc.dao.impl.h2.H2SemesterDAOImpl.update(H2SemesterDAOImpl.java:57) [classes/:?]
	at com.nixsolutions.jdbc.dao.impl.h2.H2SemesterDAOImpl.update(H2SemesterDAOImpl.java:1) [classes/:?]
	at com.nixsolutions.jdbc.dao.impl.h2.BaseTest.testShouldUpdateBean(BaseTest.java:86) [test-classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_45]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_45]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_45]
	at java.lang.reflect.Method.invoke(Method.java:497) ~[?:1.8.0_45]
	at junit.framework.TestCase.runTest(TestCase.java:176) [junit-4.12.jar:4.12]
	at junit.framework.TestCase.runBare(TestCase.java:141) [junit-4.12.jar:4.12]
	at junit.framework.TestResult$1.protect(TestResult.java:122) [junit-4.12.jar:4.12]
	at junit.framework.TestResult.runProtected(TestResult.java:142) [junit-4.12.jar:4.12]
	at junit.framework.TestResult.run(TestResult.java:125) [junit-4.12.jar:4.12]
	at junit.framework.TestCase.run(TestCase.java:129) [junit-4.12.jar:4.12]
	at junit.framework.TestSuite.runTest(TestSuite.java:252) [junit-4.12.jar:4.12]
	at junit.framework.TestSuite.run(TestSuite.java:247) [junit-4.12.jar:4.12]
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:86) [junit-4.12.jar:4.12]
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86) [.cp/:?]
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38) [.cp/:?]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459) [.cp/:?]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678) [.cp/:?]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382) [.cp/:?]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192) [.cp/:?]
13:26:12.587 [main] ERROR [H2SemesterDAOImpl]: Can't add grade [ID: 2; Name: 2nd upd; Start date: 2016-01-06; End date: 2016-05-03]
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "UPDATE SEMESTER SET SEMESTER_NAME = ?, SEMESTER_DATE_START = ?, SEMESTER_DATE_END = ?, WHERE[*] SEMESTER_ID = ? "; expected "identifier"; SQL statement:
UPDATE semester SET semester_name = ?, semester_date_start = ?, semester_date_end = ?, WHERE semester_id = ? [42001-193]
	at org.h2.engine.SessionRemote.done(SessionRemote.java:624) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.command.CommandRemote.prepare(CommandRemote.java:68) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.command.CommandRemote.<init>(CommandRemote.java:45) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.engine.SessionRemote.prepareCommand(SessionRemote.java:494) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1203) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:73) ~[h2-1.4.193.jar:1.4.193]
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:287) ~[h2-1.4.193.jar:1.4.193]
	at com.nixsolutions.jdbc.dao.impl.h2.H2SemesterDAOImpl.update(H2SemesterDAOImpl.java:56) [classes/:?]
	at com.nixsolutions.jdbc.dao.impl.h2.H2SemesterDAOImpl.update(H2SemesterDAOImpl.java:1) [classes/:?]
	at com.nixsolutions.jdbc.dao.impl.h2.BaseTest.testShouldUpdateBean(BaseTest.java:86) [test-classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_45]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_45]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_45]
	at java.lang.reflect.Method.invoke(Method.java:497) ~[?:1.8.0_45]
	at junit.framework.TestCase.runTest(TestCase.java:176) [junit-4.12.jar:4.12]
	at junit.framework.TestCase.runBare(TestCase.java:141) [junit-4.12.jar:4.12]
	at junit.framework.TestResult$1.protect(TestResult.java:122) [junit-4.12.jar:4.12]
	at junit.framework.TestResult.runProtected(TestResult.java:142) [junit-4.12.jar:4.12]
	at junit.framework.TestResult.run(TestResult.java:125) [junit-4.12.jar:4.12]
	at junit.framework.TestCase.run(TestCase.java:129) [junit-4.12.jar:4.12]
	at junit.framework.TestSuite.runTest(TestSuite.java:252) [junit-4.12.jar:4.12]
	at junit.framework.TestSuite.run(TestSuite.java:247) [junit-4.12.jar:4.12]
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:86) [junit-4.12.jar:4.12]
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86) [.cp/:?]
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38) [.cp/:?]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459) [.cp/:?]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678) [.cp/:?]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382) [.cp/:?]
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192) [.cp/:?]
