<project name = "14_ant" default="dist" basedir = "." xmlns:ac="antlib:net.sf.antcontrib">
	<property file="build.properties" />
		
	<property name="build" location="build" />		
	<property name="dist" location="dist" />
	<property name="src" location="src" />
	<property name="test" location="test" />
	<property name="build.src" location="${build}/main" />
	<property name="build.test" location="${build}/test" />
	<property name="lib" location="lib" />	
	
	<property name="version" value="1.0"/>
	
	<path id="classpath.test">
		<fileset dir="${lib}">
			<include name="**/*.jar"/>
		</fileset>
		<pathelement path="${build.src}"/>
	</path>
	
	<target name="init">
		<echo message="Starting build initialization" />
		
		<mkdir dir="${build.src}"/>
		
		<echo message="Initialization completed" />
	</target>
	
	<target name="clean">
		<echo message="Cleaning project directory" />
		
		<input validargs="y,n" addproperty="do.backup">
			Do you want to backup current build?
		</input>

		<condition property="confirmed">
			<equals arg1="y" arg2="${do.backup}"/>
		</condition>
		
		<antcall target="backup" />
		
		<delete dir="${build}" />
		<delete dir="${dist}" />
		
		<echo message="Cleanup completed" />
	</target>
	
	<target name="backup" if="confirmed">
		<property name="backup" location="backup" />	
		<mkdir dir="${backup}" />
		<tstamp/>
		<zip destfile="${backup}/${ant.project.name}.backup.${DSTAMP}.${TSTAMP}.zip">
			<zipfileset dir="${build}" erroronmissingdir="false" />
			<zipfileset dir="${dist}" erroronmissingdir="false" />
		</zip>
    </target>
	
	<target name="compile" depends="init">
		<echo message="Compiling sources" />
		
		<javac srcdir="${src}" destdir="${build.src}" />
		
		<echo message="Compilation completed" />
	</target>
	
	<target name="dist" depends="compile">
		<echo message="Packaging binary files" />
		
		<buildnumber />
		<mkdir dir="${dist}"/>
		<jar jarfile="${dist}/${ant.project.name}-${version}.${build.number}.jar" basedir="${build.src}" />
		
		<echo message="Packaging completed" />
	</target>
	
	<target name="test-compile" depends="compile">	
		<echo message="Compiling test sources" />
	
		<mkdir dir="${build.test}"/>
		<javac srcdir="${test}" destdir="${build.test}">
			<classpath refid="classpath.test" />
		</javac>
		
		<echo message="Tests compilation completed" />
	</target>
	
	<target name="test" depends="test-compile">
		<echo message="Running tests" />
		
		<junit printsummary="on" haltonfailure="yes" fork="true">
			<classpath>
				<path refid="classpath.test" />
				<pathelement location="${build.test}" />
			</classpath>
			<formatter type="brief" usefile="false" />
			<batchtest>
				<fileset dir="${test}" includes="**/*Test.java" />
			</batchtest>
		</junit>
		
		<echo message="Test run completed" />
	</target>
</project>